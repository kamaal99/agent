name: Build Debian Package

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    - name: Set up GPG
      run: |
        # Create GPG key configuration
        cat > key-config <<EOF
        %echo Generating GPG key
        Key-Type: RSA
        Key-Length: 4096
        Name-Real: Your Name
        Name-Email: your.email@example.com
        Expire-Date: 1y
        %no-protection
        %commit
        %echo Done
        EOF
        
        # Generate new GPG key
        gpg --batch --generate-key key-config
        
        # Export the key ID
        export GPG_KEY_ID=$(gpg --list-secret-keys --keyid-format LONG | grep sec | cut -d'/' -f2 | cut -d' ' -f1)
        echo "GPG_KEY_ID=$GPG_KEY_ID" >> $GITHUB_ENV
        
        # Export public and private keys
        gpg --armor --export $GPG_KEY_ID > public.key
        gpg --armor --export-secret-key $GPG_KEY_ID > private.key

    - name: Install build dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential devscripts debhelper

    - name: Build package
      run: |
        # Import the signing key
        gpg --import private.key
        
        # Build the package
        dpkg-buildpackage -us -uc
        
        # Sign the package
        dpkg-sig --sign builder -k $GPG_KEY_ID ../*.deb

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: debian-package
        path: ../*.deb

    - name: Cleanup sensitive data
      if: always()
      run: |
        rm -f private.key public.key key-config
        gpg --batch --yes --delete-secret-keys $GPG_KEY_ID
        gpg --batch --yes --delete-key $GPG_KEY_ID